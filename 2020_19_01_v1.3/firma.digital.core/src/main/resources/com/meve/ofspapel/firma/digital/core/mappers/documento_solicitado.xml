<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.meve.ofspapel.firma.digital.core.mappers.DocumentoSolicitadoDAO">
    
    <resultMap id="itemMap" type="com.meve.ofspapel.firma.digital.core.entidades.RegistroSolicitud">
        <constructor>
            <arg column="id" javaType="integer" />
        </constructor>
        
        <result property="idUsuario"            column="id_usuario"                 />
        <result property="fechaHora"            column="fecha_hora" javaType="Date" />
        <result property="folio"                column="folio"                      />
        <result property="nombre"               column="nombre"                     />
        <result property="emailDestinatario"    column="email_destinatario"         /> 
        <result property="emailSolicitante"     column="email_solicitante"          />
        <result property="estatusValue"         column="estatus"                    />
        <result property="ultimaActualizacion"  column="last_update" javaType="Date"/>
        <result property="idDocumentoFirmado"   column="id_documento_firmado"       />
    </resultMap>
            
    <sql id="itemsFilters">
		<where>
            id_usuario = #{invocador.id}
        
            <if test="consulta.tokens != null">
				and
				<if test="_databaseId == 'postgreSQL' or _databaseId == 'h2'">
					<foreach collection="consulta.tokens" item="token" separator=" and ">
						(  lower( item.nombre) like '%' || lower( #{token}) || '%'
						or lower( item.folio)  like '%' || lower( #{token}) || '%'
						)
					</foreach>
				</if>
				<if test="_databaseId != 'postgreSQL' and _databaseId != 'h2'">
					<foreach collection="consulta.tokens" item="token" separator=" and ">
						(  lower( item.nombre) like '%' + lower( #{token}) + '%'
						or lower( item.folio)  like '%' + lower( #{token}) + '%'
                        )
					</foreach>
				</if>
			</if>
        </where>
	</sql>
	
	<!--	List<> listarItems( consulta: Consulta, invocador: Invoker, ordenacion: List<String>) -->
	
	<select id="listarItems" resultMap="itemMap">
		select item.*, atencion.id_documento_firmado
        from eurk_wsss_solicitud_firma item 
        left outer join eurk_wsss_solicitud_atendida atencion on atencion.id_solicitud_firma = item.id
        <include refid="itemsFilters"/>
		order by <foreach collection="ordenacion" item="columna" separator=",">${columna}</foreach>		
	</select>
	
    <!--    RegistroSolicitud obtenerItem( claveOrganizacion: String, invocador: Invoker, idItem: Integer)  -->
    
    <select id="obtenerItem" resultMap="itemMap">
		select item.*, atencion.id_documento_firmado
        from eurk_wsss_solicitud_firma item 
        left outer join eurk_wsss_solicitud_atendida atencion on atencion.id_solicitud_firma = item.id
		where item.id = #{idItem} and item.id_usuario = #{invocador.id}
	</select>
	
    <!--    RegistroSolicitud obtenerItemById( idItem: Integer)                         -->
    
    <select id="obtenerItemById" resultMap="itemMap">
        select item.*, atencion.id_documento_firmado
        from eurk_wsss_solicitud_firma item 
        left outer join eurk_wsss_solicitud_atendida atencion on atencion.id_solicitud_firma = item.id
        where item.id = #{idItem}
    </select>
    
    <!--    RegistroSolicitud obtenerItemByIdDocumento( idDocumento: Integer)                       -->

    <select id="obtenerItemByIdDocumento" resultMap="itemMap">
        select item.*, atencion.id_documento_firmado
        from eurk_wsss_solicitud_firma item 
        left outer join eurk_wsss_solicitud_atendida atencion on atencion.id_solicitud_firma = item.id
        where atencion.id_documento_firmado = #{idDocumento}
    </select>
    
    <!--    RegistroSolicitud obtenerItemByFolio( folio: String, nombre: String)                    -->
    
    <select id="obtenerItemByFolio" resultMap="itemMap">
        select item.*, atencion.id_documento_firmado
        from eurk_wsss_solicitud_firma item 
        left outer join eurk_wsss_solicitud_atendida atencion on atencion.id_solicitud_firma = item.id
        where item.folio = #{folio} and item.nombre = #{nombre}
    </select>
    
	<!-- 	int contarItems( consulta: Consulta, invocador: Invoker)	-->
	
	<select id="contarItems" resultType="integer">
		select count(*) from eurk_wsss_solicitud_firma item <include refid="itemsFilters"/>
	</select>
    
</mapper>